on: [push, pull_request]

name: CI

jobs:
  self-care:
    name: Flake self-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@v9
        with:
          fail-mode: true

  pre-commit-checks:
    name: "Pre-commit checks: cargo fmt, typos, pgp-signed and conventional commits"
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Pre-commit checks
        run: nix flake check

  clippy:
    name: "Stable build, clippy and test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - --no-default-features
          - --all-features
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: nix develop -i -L .#stable --command cargo build ${{ matrix.features }}
      - name: Clippy
        run: nix develop -i -L .#stable --command cargo clippy ${{ matrix.features }} -- -D warnings
      - name: Test
        run: nix develop -i -L .#stable --command cargo test ${{ matrix.features }}

  build-test:
    name: "MSRV build and test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - --no-default-features
          - --all-features
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: nix develop -i -L .#msrv --command cargo build ${{ matrix.features }}
      - name: Test
        run: nix develop -i -L .#msrv --command cargo test ${{ matrix.features }}

  check-no-std:
    name: Check no_std
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - msrv
          - stable
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      # TODO "--target thumbv6m-none-eabi" should work but currently does not
      - name: Check bdk_chain
        working-directory: ./crates/chain
        run: nix develop -i -L ".#${{ matrix.rust }}" --command cargo check --no-default-features --features miniscript/no-std,hashbrown
      - name: Check bdk_wallet
        working-directory: ./crates/wallet
        run: nix develop -i -L ".#${{ matrix.rust }}" --command cargo check --no-default-features --features miniscript/no-std,bdk_chain/hashbrown
      - name: Check bdk_esplora
        working-directory: ./crates/esplora
        run: nix develop -i -L ".#${{ matrix.rust }}" --command cargo check --no-default-features --features miniscript/no-std,bdk_chain/hashbrown

  check-wasm:
    name: Check WASM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - msrv
          - stable
        target:
          - wasm32-unknown-unknown
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Check bdk_wallet
        working-directory: ./crates/wallet
        run: nix develop -i -L ".#${{ matrix.rust }}" --command cargo check --target ${{ matrix.target }} --no-default-features --features miniscript/no-std,bdk_chain/hashbrown
      - name: Check bdk_esplora
        working-directory: ./crates/esplora
        run: nix develop -i -L ".#${{ matrix.rust }}" --command cargo check --target ${{ matrix.target }} --no-default-features --features miniscript/no-std,bdk_chain/hashbrown,async

  build-examples:
    name: Build examples
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example-dir:
          - example_cli
          - example_bitcoind_rpc_polling
          - example_electrum
          - example_esplora
          - wallet_electrum
          - wallet_esplora_async
          - wallet_esplora_blocking
          - wallet_rpc
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
      - name: Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v8
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Build examples
        working-directory: example-crates/${{ matrix.example-dir }}
        run: nix develop -i -L .#stable --command cargo build
